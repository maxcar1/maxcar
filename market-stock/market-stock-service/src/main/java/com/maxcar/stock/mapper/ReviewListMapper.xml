<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.maxcar.stock.dao.ReviewListMapper" >
  <resultMap id="BaseResultMap" type="com.maxcar.stock.pojo.ReviewList" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="out_reason" property="outReason" jdbcType="INTEGER" />
    <result column="reason_desc" property="reasonDesc" jdbcType="VARCHAR" />
    <result column="back_time" property="backTime" jdbcType="TIMESTAMP" />
    <result column="car_id" property="carId" jdbcType="VARCHAR" />
    <result column="market_id" property="marketId" jdbcType="VARCHAR" />
    <result column="apply_type" property="applyType" jdbcType="INTEGER" />
    <result column="is_valid" property="isValid" jdbcType="INTEGER" />
    <result column="insert_time" property="insertTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, out_reason, reason_desc, back_time, car_id, market_id, apply_type, is_valid, 
    insert_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.maxcar.stock.pojo.ReviewListExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from review_list
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from review_list
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from review_list
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.maxcar.stock.pojo.ReviewListExample" >
    delete from review_list
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.maxcar.stock.pojo.ReviewList" >
    insert into review_list (id, out_reason, reason_desc, 
      back_time, car_id, market_id, 
      apply_type, is_valid, insert_time
      )
    values (#{id,jdbcType=INTEGER}, #{outReason,jdbcType=INTEGER}, #{reasonDesc,jdbcType=VARCHAR}, 
      #{backTime,jdbcType=TIMESTAMP}, #{carId,jdbcType=VARCHAR}, #{marketId,jdbcType=VARCHAR}, 
      #{applyType,jdbcType=INTEGER}, #{isValid,jdbcType=INTEGER}, #{insertTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.maxcar.stock.pojo.ReviewList" >
    insert into review_list
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="outReason != null" >
        out_reason,
      </if>
      <if test="reasonDesc != null" >
        reason_desc,
      </if>
      <if test="backTime != null" >
        back_time,
      </if>
      <if test="carId != null" >
        car_id,
      </if>
      <if test="marketId != null" >
        market_id,
      </if>
      <if test="applyType != null" >
        apply_type,
      </if>
      <if test="isValid != null" >
        is_valid,
      </if>
      <if test="insertTime != null" >
        insert_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="outReason != null" >
        #{outReason,jdbcType=INTEGER},
      </if>
      <if test="reasonDesc != null" >
        #{reasonDesc,jdbcType=VARCHAR},
      </if>
      <if test="backTime != null" >
        #{backTime,jdbcType=TIMESTAMP},
      </if>
      <if test="carId != null" >
        #{carId,jdbcType=VARCHAR},
      </if>
      <if test="marketId != null" >
        #{marketId,jdbcType=VARCHAR},
      </if>
      <if test="applyType != null" >
        #{applyType,jdbcType=INTEGER},
      </if>
      <if test="isValid != null" >
        #{isValid,jdbcType=INTEGER},
      </if>
      <if test="insertTime != null" >
        #{insertTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.maxcar.stock.pojo.ReviewListExample" resultType="java.lang.Integer" >
    select count(*) from review_list
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update review_list
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.outReason != null" >
        out_reason = #{record.outReason,jdbcType=INTEGER},
      </if>
      <if test="record.reasonDesc != null" >
        reason_desc = #{record.reasonDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.backTime != null" >
        back_time = #{record.backTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.carId != null" >
        car_id = #{record.carId,jdbcType=VARCHAR},
      </if>
      <if test="record.marketId != null" >
        market_id = #{record.marketId,jdbcType=VARCHAR},
      </if>
      <if test="record.applyType != null" >
        apply_type = #{record.applyType,jdbcType=INTEGER},
      </if>
      <if test="record.isValid != null" >
        is_valid = #{record.isValid,jdbcType=INTEGER},
      </if>
      <if test="record.insertTime != null" >
        insert_time = #{record.insertTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update review_list
    set id = #{record.id,jdbcType=INTEGER},
      out_reason = #{record.outReason,jdbcType=INTEGER},
      reason_desc = #{record.reasonDesc,jdbcType=VARCHAR},
      back_time = #{record.backTime,jdbcType=TIMESTAMP},
      car_id = #{record.carId,jdbcType=VARCHAR},
      market_id = #{record.marketId,jdbcType=VARCHAR},
      apply_type = #{record.applyType,jdbcType=INTEGER},
      is_valid = #{record.isValid,jdbcType=INTEGER},
      insert_time = #{record.insertTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.maxcar.stock.pojo.ReviewList" >
    update review_list
    <set >
      <if test="outReason != null" >
        out_reason = #{outReason,jdbcType=INTEGER},
      </if>
      <if test="reasonDesc != null" >
        reason_desc = #{reasonDesc,jdbcType=VARCHAR},
      </if>
      <if test="backTime != null" >
        back_time = #{backTime,jdbcType=TIMESTAMP},
      </if>
      <if test="carId != null" >
        car_id = #{carId,jdbcType=VARCHAR},
      </if>
      <if test="marketId != null" >
        market_id = #{marketId,jdbcType=VARCHAR},
      </if>
      <if test="applyType != null" >
        apply_type = #{applyType,jdbcType=INTEGER},
      </if>
      <if test="isValid != null" >
        is_valid = #{isValid,jdbcType=INTEGER},
      </if>
      <if test="insertTime != null" >
        insert_time = #{insertTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.maxcar.stock.pojo.ReviewList" >
    update review_list
    set out_reason = #{outReason,jdbcType=INTEGER},
      reason_desc = #{reasonDesc,jdbcType=VARCHAR},
      back_time = #{backTime,jdbcType=TIMESTAMP},
      car_id = #{carId,jdbcType=VARCHAR},
      market_id = #{marketId,jdbcType=VARCHAR},
      apply_type = #{applyType,jdbcType=INTEGER},
      is_valid = #{isValid,jdbcType=INTEGER},
      insert_time = #{insertTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>