<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.maxcar.stock.dao.CarReviewMapper" >
  <resultMap id="BaseResultMap" type="com.maxcar.stock.pojo.CarReview" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="car_id" property="carId" jdbcType="VARCHAR" />
    <result column="market_id" property="marketId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="out_reason" property="outReason" jdbcType="VARCHAR" />
    <result column="back_time" property="backTime" jdbcType="TIMESTAMP" />
    <result column="is_pass" property="isPass" jdbcType="INTEGER" />
    <result column="reason_desc" property="reasonDesc" jdbcType="VARCHAR" />
    <result column="is_pledge" property="isPledge" jdbcType="INTEGER" />
    <result column="insert_time" property="insertTime" jdbcType="TIMESTAMP" />
    <result column="desc" property="desc" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="CarRecordVoMap" type="com.maxcar.stock.entity.Response.CarRecordVo">
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="review_id" property="reviewId" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="barrier_position" property="barrierPosition" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, car_id, market_id, user_id, out_reason, back_time, is_pass, is_pledge, insert_time,
    is_valid,reason_desc

  </sql>

  <sql id="CarReviewVo_Column_List" >
    cr.id, cr.car_id as carId, cr.market_id as marketId, cr.user_id as userId, cr.out_reason as outReason,
    cr.back_time as backTime, cr.is_pass as isPass, cr.reason_desc as reasonDesc, cr.is_pledge as isPledge,
    cr.insert_time as insertTime, cr.is_valid as isValid,c.stock_status as stockStatus
  </sql>

  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.maxcar.stock.pojo.CarReviewExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from car_review
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from car_review
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from car_review
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.maxcar.stock.pojo.CarReviewExample" >
    delete from car_review
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.maxcar.stock.pojo.CarReview" >
    insert into car_review (id, car_id, market_id, 
      user_id, out_reason, back_time, 
      is_pass, is_pledge, insert_time,desc,
      is_valid)
    values (#{id,jdbcType=VARCHAR}, #{carId,jdbcType=VARCHAR}, #{marketId,jdbcType=VARCHAR},
      #{userId,jdbcType=VARCHAR}, #{outReason,jdbcType=VARCHAR}, #{backTime,jdbcType=TIMESTAMP}, 
      #{isPass,jdbcType=INTEGER}, #{isPledge,jdbcType=INTEGER}, #{insertTime,jdbcType=TIMESTAMP}, 
      #{isValid,jdbcType=INTEGER}, #{desc,jdbcType=INTEGER})

  </insert>
  <insert id="insertSelective" parameterType="com.maxcar.stock.pojo.CarReview" >
    insert into car_review
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="carId != null" >
        car_id,
      </if>
      <if test="desc != null" >
        `desc`,
      </if>
      <if test="marketId != null" >
        market_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="outReason != null" >
        out_reason,
      </if>
      <if test="backTime != null" >
        back_time,
      </if>
      <if test="isPass != null" >
        is_pass,
      </if>
      <if test="reasonDesc != null" >
        reason_desc,
      </if>
      <if test="isPledge != null" >
        is_pledge,
      </if>
      <if test="insertTime != null" >
        insert_time,
      </if>
      <if test="isValid != null" >
        is_valid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="carId != null" >
        #{carId,jdbcType=VARCHAR},
      </if>
      <if test="desc != null" >
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="marketId != null" >
        #{marketId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="outReason != null" >
        #{outReason,jdbcType=VARCHAR},
      </if>
      <if test="backTime != null" >
        #{backTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isPass != null" >
        #{isPass,jdbcType=INTEGER},
      </if>
      <if test="reasonDesc != null" >
        #{reasonDesc,jdbcType=VARCHAR},
      </if>
      <if test="isPledge != null" >
        #{isPledge,jdbcType=INTEGER},
      </if>
      <if test="insertTime != null" >
        #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isValid != null" >
        #{isValid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.maxcar.stock.pojo.CarReviewExample" resultType="java.lang.Integer" >
    select count(*) from car_review
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update car_review
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.carId != null" >
        car_id = #{record.carId,jdbcType=VARCHAR},
      </if>
      <if test="record.marketId != null" >
        market_id = #{record.marketId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.outReason != null" >
        out_reason = #{record.outReason,jdbcType=VARCHAR},
      </if>
      <if test="record.backTime != null" >
        back_time = #{record.backTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isPass != null" >
        is_pass = #{record.isPass,jdbcType=INTEGER},
      </if>
      <if test="record.reasonDesc != null" >
        reason_desc = #{record.reasonDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.isPledge != null" >
        is_pledge = #{record.isPledge,jdbcType=INTEGER},
      </if>
      <if test="record.insertTime != null" >
        insert_time = #{record.insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isValid != null" >
        is_valid = #{record.isValid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update car_review
    set id = #{record.id,jdbcType=INTEGER},
      car_id = #{record.carId,jdbcType=VARCHAR},
      market_id = #{record.marketId,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      out_reason = #{record.outReason,jdbcType=VARCHAR},
      back_time = #{record.backTime,jdbcType=TIMESTAMP},
      is_pass = #{record.isPass,jdbcType=INTEGER},
      reason_desc = #{record.reasonDesc,jdbcType=VARCHAR},
      is_pledge = #{record.isPledge,jdbcType=INTEGER},
      insert_time = #{record.insertTime,jdbcType=TIMESTAMP},
      is_valid = #{record.isValid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.maxcar.stock.pojo.CarReview" >
    update car_review
    <set >
      <if test="carId != null" >
        car_id = #{carId,jdbcType=VARCHAR},
      </if>
      <if test="marketId != null" >
        market_id = #{marketId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="desc != null" >
        desc = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="outReason != null" >
        out_reason = #{outReason,jdbcType=VARCHAR},
      </if>
      <if test="backTime != null" >
        back_time = #{backTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isPass != null" >
        is_pass = #{isPass,jdbcType=INTEGER},
      </if>
      <if test="reasonDesc != null" >
        reason_desc = #{reasonDesc,jdbcType=VARCHAR},
      </if>
      <if test="isPledge != null" >
        is_pledge = #{isPledge,jdbcType=INTEGER},
      </if>
      <if test="insertTime != null" >
        insert_time = #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isValid != null" >
        is_valid = #{isValid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.maxcar.stock.pojo.CarReview" >
    update car_review
    set car_id = #{carId,jdbcType=VARCHAR},
      market_id = #{marketId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      out_reason = #{outReason,jdbcType=VARCHAR},
      back_time = #{backTime,jdbcType=TIMESTAMP},
      is_pass = #{isPass,jdbcType=INTEGER},
      reason_desc = #{reasonDesc,jdbcType=VARCHAR},
      is_pledge = #{isPledge,jdbcType=INTEGER},
      insert_time = #{insertTime,jdbcType=TIMESTAMP},
      is_valid = #{isValid,jdbcType=INTEGER},
      desc = #{desc,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="selectByMarketid" resultType="com.maxcar.stock.pojo.HisWarning" parameterType="java.lang.String">
        select
         back_time as backTime,out_reason as outReason,car_id as carId,is_pass as isPass
        from car_review
        where
        is_valid = 1 and market_id = #{marketId,jdbcType=VARCHAR}
            and is_pass = 1 and back_time > now()
    </select>


  <select id="selectByHisWarning" resultType="com.maxcar.stock.pojo.HisWarning">
    SELECT
    cc.rfid,
    cc.vin,
    cc.carStatus,
    cc.tenant,
    cc.carId,
    cc.brandCode,
    cc.brandName,
    cc.seriesCode,
    cc.seriesName,
    cc.stockStatus,
    cc.modelName,
    cr.user_id 'userId',
    cr.out_reason 'outReason',
    cr.id,
    cr.back_time 'backTime',
    cr.is_pass 'isPass',
    cr.reason_desc 'reasonDesc',
    cr.is_pledge 'isPledge',
    cr.is_valid 'isValid',
    cr.market_id 'matketId'
    FROM
    car_review cr
    RIGHT JOIN (
    SELECT
    c.rfid,
    c.vin,
    c.car_status 'carStatus',
    c.tenant,
    c.stock_status 'stockStatus',
    c.id 'carId',
    cb.brand_code AS 'brandCode',
    cb.brand_name AS 'brandName',
    cb.model_name AS 'modelName',
    cb.series_code 'seriesCode',
    cb.series_name AS 'seriesName'
    FROM
    car c
    LEFT JOIN car_base cb ON c.id = cb.id
    WHERE 1=1
    <if test="brandCode != null and brandCode != ''" >
      and cb.brand_code = #{brandCode,jdbcType=VARCHAR}
    </if>
    <if test="seriesCode != null and seriesCode != ''" >
      and cb.series_code = #{seriesCode,jdbcType=VARCHAR}
    </if>
    <if test="tenant != null and tenant != ''" >
      and c.tenant = #{tenant,jdbcType=VARCHAR}
    </if>
    <if test="vin != null and vin != ''" >
      and c.vin like concat(concat('%',#{vin}),'%')
    </if>
    <if test="rfid != null and rfid != ''" >
      and c.rfid = #{rfid,jdbcType=VARCHAR}
    </if>
) cc on cc.carId = cr.car_id
    WHERE
    cr.is_pledge = 1
    AND cr.is_pass = 1
    AND cr.is_valid = 1
    AND cc.stockStatus = 3
    OR (
    cr.is_pledge = 2
    AND (
    cr.back_time > NOW()
    AND date_add(NOW(), INTERVAL 1 HOUR) > cr.back_time
    )
    )
    AND market_id = #{marketId,jdbcType=VARCHAR}
    ORDER BY
    backTime DESC

  </select>

  <select id="getCarRecord" parameterType="com.maxcar.stock.pojo.CarReview" resultMap="CarRecordVoMap">
    SELECT a.id as review_id,c.insert_time as time,c.type,d.barrier_position
    from car_review a
    LEFT JOIN car b
    on a.car_id = b.id
    LEFT JOIN car_record c
    on b.vin = c.vin
    left join barrier d
    on c.channel = d.barrier_id
    WHERE a.is_valid = 1
    and c.insert_time&gt;=a.insert_time  and   c.insert_time&lt;=a.back_time
    <if test="id != null and id != '' ">
      and a.id = #{id}
    </if>
    <if test="carId != null and carId != '' ">
      and a.car_id = #{carId}
    </if>
  </select>

  <select id="selectAllTimeoutNotreturnCarReview" resultType="com.maxcar.stock.vo.CarReviewVo">
    SELECT
    <include refid="CarReviewVo_Column_List" />
    FROM
    car_review cr
    LEFT JOIN car c ON cr.car_id = c.id
    WHERE
    cr.is_pass = 1 AND cr.is_valid = 1 AND now() >= cr.back_time AND c.stock_status = 3
  </select>

  <select id="selectAllCarReview" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from car_review
    where is_valid = 1
  </select>


</mapper>