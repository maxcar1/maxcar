<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.maxcar.barrier.dao.BarrierControlCarMapper" >
  <resultMap id="BaseResultMap" type="com.maxcar.barrier.pojo.BarrierControlCar" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="barrier_id" property="barrierId" jdbcType="VARCHAR" />
    <result column="market_id" property="marketId" jdbcType="VARCHAR" />
    <result column="control_type" property="controlType" jdbcType="INTEGER" />
    <result column="list_type" property="listType" jdbcType="INTEGER" />
    <result column="car_id" property="carId" jdbcType="VARCHAR" />
    <result column="vin" property="vin" jdbcType="VARCHAR" />
    <result column="rfid" property="rfid" jdbcType="VARCHAR" />
    <result column="tenant_id" property="tenantId" jdbcType="VARCHAR" />
    <result column="isvalid" property="isvalid" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="insert_time" property="insertTime" jdbcType="TIMESTAMP" />
    <result column="insert_operator" property="insertOperator" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_operator" property="updateOperator" jdbcType="VARCHAR" />
  </resultMap>

  <resultMap id="BarrierCarResultMap" type="com.maxcar.barrier.entity.BarrierCarRespose" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="barrier_id" property="barrierId" jdbcType="VARCHAR" />
    <result column="market_id" property="marketId" jdbcType="VARCHAR" />
    <result column="control_type" property="controlType" jdbcType="INTEGER" />
    <result column="list_type" property="listType" jdbcType="INTEGER" />
    <result column="car_id" property="carId" jdbcType="VARCHAR" />
    <result column="vin" property="vin" jdbcType="VARCHAR" />
    <result column="rfid" property="rfid" jdbcType="VARCHAR" />
    <result column="tenant_id" property="tenantId" jdbcType="VARCHAR" />

    <result column="tenant_name" property="tenantName" jdbcType="VARCHAR" />
    <result column="brand_name" property="brandName" jdbcType="VARCHAR" />
    <result column="series_name" property="seriesName" jdbcType="VARCHAR" />

    <result column="isvalid" property="isvalid" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="insert_time" property="insertTime" jdbcType="TIMESTAMP" />
    <result column="insert_operator" property="insertOperator" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_operator" property="updateOperator" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, barrier_id, market_id, control_type, list_type, car_id, vin, rfid, tenant_id, 
    isvalid, remark, insert_time, insert_operator, update_time, update_operator
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.maxcar.barrier.pojo.BarrierControlCarExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from barrier_control_car
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from barrier_control_car
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from barrier_control_car
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.maxcar.barrier.pojo.BarrierControlCarExample" >
    delete from barrier_control_car
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.maxcar.barrier.pojo.BarrierControlCar" >
    insert into barrier_control_car (id, barrier_id, market_id, 
      control_type, list_type, car_id, 
      vin, rfid, tenant_id, 
      isvalid, remark, insert_time, 
      insert_operator, update_time, update_operator
      )
    values (#{id,jdbcType=VARCHAR}, #{barrierId,jdbcType=VARCHAR}, #{marketId,jdbcType=VARCHAR}, 
      #{controlType,jdbcType=INTEGER}, #{listType,jdbcType=INTEGER}, #{carId,jdbcType=VARCHAR}, 
      #{vin,jdbcType=VARCHAR}, #{rfid,jdbcType=VARCHAR}, #{tenantId,jdbcType=VARCHAR}, 
      #{isvalid,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{insertTime,jdbcType=TIMESTAMP}, 
      #{insertOperator,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updateOperator,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.maxcar.barrier.pojo.BarrierControlCar" >
    insert into barrier_control_car
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="barrierId != null" >
        barrier_id,
      </if>
      <if test="marketId != null" >
        market_id,
      </if>
      <if test="controlType != null" >
        control_type,
      </if>
      <if test="listType != null" >
        list_type,
      </if>
      <if test="carId != null" >
        car_id,
      </if>
      <if test="vin != null" >
        vin,
      </if>
      <if test="rfid != null" >
        rfid,
      </if>
      <if test="tenantId != null" >
        tenant_id,
      </if>
      <if test="isvalid != null" >
        isvalid,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="insertTime != null" >
        insert_time,
      </if>
      <if test="insertOperator != null" >
        insert_operator,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateOperator != null" >
        update_operator,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="barrierId != null" >
        #{barrierId,jdbcType=VARCHAR},
      </if>
      <if test="marketId != null" >
        #{marketId,jdbcType=VARCHAR},
      </if>
      <if test="controlType != null" >
        #{controlType,jdbcType=INTEGER},
      </if>
      <if test="listType != null" >
        #{listType,jdbcType=INTEGER},
      </if>
      <if test="carId != null" >
        #{carId,jdbcType=VARCHAR},
      </if>
      <if test="vin != null" >
        #{vin,jdbcType=VARCHAR},
      </if>
      <if test="rfid != null" >
        #{rfid,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null" >
        #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="isvalid != null" >
        #{isvalid,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="insertTime != null" >
        #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="insertOperator != null" >
        #{insertOperator,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateOperator != null" >
        #{updateOperator,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.maxcar.barrier.pojo.BarrierControlCarExample" resultType="java.lang.Integer" >
    select count(*) from barrier_control_car
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update barrier_control_car
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.barrierId != null" >
        barrier_id = #{record.barrierId,jdbcType=VARCHAR},
      </if>
      <if test="record.marketId != null" >
        market_id = #{record.marketId,jdbcType=VARCHAR},
      </if>
      <if test="record.controlType != null" >
        control_type = #{record.controlType,jdbcType=INTEGER},
      </if>
      <if test="record.listType != null" >
        list_type = #{record.listType,jdbcType=INTEGER},
      </if>
      <if test="record.carId != null" >
        car_id = #{record.carId,jdbcType=VARCHAR},
      </if>
      <if test="record.vin != null" >
        vin = #{record.vin,jdbcType=VARCHAR},
      </if>
      <if test="record.rfid != null" >
        rfid = #{record.rfid,jdbcType=VARCHAR},
      </if>
      <if test="record.tenantId != null" >
        tenant_id = #{record.tenantId,jdbcType=VARCHAR},
      </if>
      <if test="record.isvalid != null" >
        isvalid = #{record.isvalid,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.insertTime != null" >
        insert_time = #{record.insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.insertOperator != null" >
        insert_operator = #{record.insertOperator,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateOperator != null" >
        update_operator = #{record.updateOperator,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update barrier_control_car
    set id = #{record.id,jdbcType=VARCHAR},
      barrier_id = #{record.barrierId,jdbcType=VARCHAR},
      market_id = #{record.marketId,jdbcType=VARCHAR},
      control_type = #{record.controlType,jdbcType=INTEGER},
      list_type = #{record.listType,jdbcType=INTEGER},
      car_id = #{record.carId,jdbcType=VARCHAR},
      vin = #{record.vin,jdbcType=VARCHAR},
      rfid = #{record.rfid,jdbcType=VARCHAR},
      tenant_id = #{record.tenantId,jdbcType=VARCHAR},
      isvalid = #{record.isvalid,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      insert_time = #{record.insertTime,jdbcType=TIMESTAMP},
      insert_operator = #{record.insertOperator,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_operator = #{record.updateOperator,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.maxcar.barrier.pojo.BarrierControlCar" >
    update barrier_control_car
    <set >
      <if test="barrierId != null" >
        barrier_id = #{barrierId,jdbcType=VARCHAR},
      </if>
      <if test="marketId != null" >
        market_id = #{marketId,jdbcType=VARCHAR},
      </if>
      <if test="controlType != null" >
        control_type = #{controlType,jdbcType=INTEGER},
      </if>
      <if test="listType != null" >
        list_type = #{listType,jdbcType=INTEGER},
      </if>
      <if test="carId != null" >
        car_id = #{carId,jdbcType=VARCHAR},
      </if>
      <if test="vin != null" >
        vin = #{vin,jdbcType=VARCHAR},
      </if>
      <if test="rfid != null" >
        rfid = #{rfid,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null" >
        tenant_id = #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="isvalid != null" >
        isvalid = #{isvalid,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="insertTime != null" >
        insert_time = #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="insertOperator != null" >
        insert_operator = #{insertOperator,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateOperator != null" >
        update_operator = #{updateOperator,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.maxcar.barrier.pojo.BarrierControlCar" >
    update barrier_control_car
    set barrier_id = #{barrierId,jdbcType=VARCHAR},
      market_id = #{marketId,jdbcType=VARCHAR},
      control_type = #{controlType,jdbcType=INTEGER},
      list_type = #{listType,jdbcType=INTEGER},
      car_id = #{carId,jdbcType=VARCHAR},
      vin = #{vin,jdbcType=VARCHAR},
      rfid = #{rfid,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=VARCHAR},
      isvalid = #{isvalid,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      insert_time = #{insertTime,jdbcType=TIMESTAMP},
      insert_operator = #{insertOperator,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_operator = #{updateOperator,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <!-- 根据名单类型和道闸id查询 -->
  <sql id="Barrier_Car_Column_List" >
    a.id, a.barrier_id, a.market_id, a.control_type, a.list_type, a.car_id, a.vin, a.rfid, a.tenant_id,a.isvalid,
    a.remark, a.insert_time, a.insert_operator, a.update_time, a.update_operator,b.tenant_name,c.brand_name,c.series_name
  </sql>

  <select id="selectAllByListType" parameterType="com.maxcar.barrier.pojo.BarrierControlCar" resultMap="BarrierCarResultMap">
    select
    <include refid="Barrier_Car_Column_List" />
    from barrier_control_car a
    left join car_base c on a.car_id = c.id
    left join maxcar_tenant_l.user_tenant b ON a.tenant_id = b.id
    where a.isvalid = 1 and a.barrier_id = #{barrierId}
    <if test="marketId != null and marketId != '' " >
      and a.market_id = #{marketId}
    </if>
    <if test="listType != null and listType != '' " >
      and a.list_type = #{listType}
    </if>
      order by a.control_type desc,insert_time desc
  </select>

</mapper>